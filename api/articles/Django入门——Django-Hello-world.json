{"title":"Django入门——Django Hello_world","uid":"1fdfb778e3f6f51c45577e883e9e32c5","slug":"Django入门——Django-Hello-world","date":"2024-02-23T12:07:46.000Z","updated":"2024-02-23T15:07:05.959Z","comments":true,"path":"api/articles/Django入门——Django-Hello-world.json","keywords":null,"cover":null,"content":"<h2 id=\"Django-View（视图）\"><a href=\"#Django-View（视图）\" class=\"headerlink\" title=\"Django View（视图）\"></a>Django View（视图）</h2><p>前面我们已经说Django 是遵循着 <code>MVC</code> 结构， 这里的 <code>V</code> 就是 <code>view</code> 视图。</p>\n<h3 id=\"视图是什么\"><a href=\"#视图是什么\" class=\"headerlink\" title=\"视图是什么\"></a>视图是什么</h3><p>我们都知道页面的展示是可以只通过 <code>HTML</code> 文件来表现出，当然一个网站肯定是比他复杂的会有请求数据发出、接收数据，在Django中视图就是接受请求、发送数据的作用，简单来说就是真正的逻辑处理的地方。</p>\n<h3 id=\"实现返回-“hello-world”-的视图\"><a href=\"#实现返回-“hello-world”-的视图\" class=\"headerlink\" title=\"实现返回 “hello world” 的视图\"></a>实现返回 “hello world” 的视图</h3><p>在我们创建的应用中，我们可以找到一个名为 $views.py$ 的文件，这个文件就是我们要写我们视图的地方。输入以下代码：</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">from django.http import HttpResponse\n\n# Create your views here.\n\ndef helloword(request): # request:接收数据\n    return HttpResponse(&#39;hello world&#39;)\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这样我们就实现了一个简单的视图函数。</p>\n<h2 id=\"Django-路由\"><a href=\"#Django-路由\" class=\"headerlink\" title=\"Django 路由\"></a>Django 路由</h2><p>这个时候如果你去 <code>runserver</code> 只能去访问到欢迎界面，因为我们的请求没有办法被视图函数接收到，所以我们需要配置路由，通过绑定视图和 <code>url</code> 使请求能够被视图函数接收到，<code>Django</code>的路由分为两个层次，需要在两个地方配置路由，第一个地方是应用中，在应用中新建一个 <code>Python</code> 文件命名为 <code>urls.py</code>，在文件中输入以下部分：</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">from django.urls import path, include # 引入配置相关的包\nimport blog.views\n\nurlpatterns &#x3D; [\n    path(&quot;hello_world&quot;, blog.views.helloword)\n]# 不需要括号\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这样就在应用层面上配置好了路由，另一个是在项目层面在<code>&lt;your djangoproject name&gt;</code> 文件夹下找到 <code>urls.py</code> 文件在 <code>urlpatterns</code> 列表下输入 <code>path(&#39;blog/&#39;, include(&#39;blog.urls&#39;))</code>。</p>\n<p>接下来将 <code>blog</code> 添加到应用配置中，即 <code>settings.py</code> 文件中，找到 <code>INSTALLED_APPS</code> 这一列表将 <code>&#39;blog.apps.BlogConfig&#39;</code> 这段代码添加进去，这样在 <code>runserver</code>中就可以在浏览器中访问了。</p>\n<p>使用 <code>python manage.py runserver</code> 命令，在浏览器中输入 <code>http://127.0.0.1:8000/blog/hello_world</code> 即可访问到我们的页面了。</p>\n","text":"Django View（视图）前面我们已经说Django 是遵循着 MVC 结构， 这里的 V 就是 view 视图。 视图是什么我们都知道页面的展示是可以只通过 HTML 文件来表现出，当然一个网站肯定是比他复杂的会有请求数据发出、接收数据，在Django中视图就是接受请求、发...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Django-View%EF%BC%88%E8%A7%86%E5%9B%BE%EF%BC%89\"><span class=\"toc-text\">Django View（视图）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%86%E5%9B%BE%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">视图是什么</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E8%BF%94%E5%9B%9E-%E2%80%9Chello-world%E2%80%9D-%E7%9A%84%E8%A7%86%E5%9B%BE\"><span class=\"toc-text\">实现返回 “hello world” 的视图</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Django-%E8%B7%AF%E7%94%B1\"><span class=\"toc-text\">Django 路由</span></a></li></ol>","author":{"name":"Gaoth","slug":"gaoth","avatar":"https://s2.loli.net/2022/10/24/zZ5Msr7bhigQVcj.jpg","link":"/","description":"不以为然的存在，细品起来会得到意想不到的有趣。<br /> @<b>公众号：噜啦啦小栈</b>","socials":{"github":"https://github.com//githubforgth","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/m0_51898303","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Leetcode1024活动的小小解密","uid":"79e698f73bf1620cec8c00ca6b6e07dc","slug":"LeetCode1024活动的解谜之道 60f600fc-dc00-4ffe-ba43-30dc8c6db45f","date":"2022-10-28T09:34:35.138Z","updated":"2022-10-28T09:34:35.138Z","comments":true,"path":"api/articles/LeetCode1024活动的解谜之道 60f600fc-dc00-4ffe-ba43-30dc8c6db45f.json","keywords":null,"cover":[],"text":"开始的开始今年的LeetCode 1024活动是一个非常有意思的活动，名字是1024马尔可夫链，活动规则很好理解，就是一个马尔可夫链嘛。马尔可夫链（Markov Chain）可以说是机器学习和人工智能的基石，在强化学习、自然语言处理、金融领域、天气预测、语音识别方面都有着极其广泛...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":3,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":4,"path":"api/tags/算法.json"}],"author":{"name":"Gaoth","slug":"gaoth","avatar":"https://s2.loli.net/2022/10/24/zZ5Msr7bhigQVcj.jpg","link":"/","description":"不以为然的存在，细品起来会得到意想不到的有趣。<br /> @<b>公众号：噜啦啦小栈</b>","socials":{"github":"https://github.com//githubforgth","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/m0_51898303","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"C语言符号的优先级","uid":"0835c4181310b6f3180f9660dba8facf","slug":"C语言符号的优先级","date":"2023-10-27T13:55:46.000Z","updated":"2023-10-27T14:51:57.222Z","comments":true,"path":"api/articles/C语言符号的优先级.json","keywords":null,"cover":null,"text":"前言在不管是考研还是计算机二级等考试中，总会遇到一些关于C语言运算符优先级的问题。但是记忆还是比较困难的一件事情。 分类在C语言中运算符主要有以下几类：算术运算符、逻辑运算符、关系运算符、位运算符、 赋值运算符、 递增和递减运算符、条件运算符。 算术运算符 算术运算符主要是指像 ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"考研C语言","slug":"考研C语言","count":1,"path":"api/tags/考研C语言.json"}],"author":{"name":"Gaoth","slug":"gaoth","avatar":"https://s2.loli.net/2022/10/24/zZ5Msr7bhigQVcj.jpg","link":"/","description":"不以为然的存在，细品起来会得到意想不到的有趣。<br /> @<b>公众号：噜啦啦小栈</b>","socials":{"github":"https://github.com//githubforgth","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/m0_51898303","juejin":"","customs":{}}}}}