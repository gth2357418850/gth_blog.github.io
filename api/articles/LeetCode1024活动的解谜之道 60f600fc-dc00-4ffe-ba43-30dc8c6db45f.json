{"title":"Leetcode1024活动的小小解密","uid":"79e698f73bf1620cec8c00ca6b6e07dc","slug":"LeetCode1024活动的解谜之道 60f600fc-dc00-4ffe-ba43-30dc8c6db45f","date":"2022-10-28T09:34:35.138Z","updated":"2022-10-28T09:34:35.138Z","comments":true,"path":"api/articles/LeetCode1024活动的解谜之道 60f600fc-dc00-4ffe-ba43-30dc8c6db45f.json","keywords":null,"cover":[],"content":"<h1 id=\"开始的开始\"><a href=\"#开始的开始\" class=\"headerlink\" title=\"开始的开始\"></a>开始的开始</h1><p>今年的LeetCode 1024活动是一个非常有意思的活动，名字是1024马尔可夫链，活动规则很好理解，就是一个马尔可夫链嘛。马尔可夫链（Markov Chain）可以说是机器学习和人工智能的基石，在强化学习、自然语言处理、金融领域、天气预测、语音识别方面都有着极其广泛的应用，去年的1024活动是<a href=\"https://leetcode.cn/1024/game\">人生重开模拟</a>，这和去年的小游戏又有了一定的联系，人生不会重来，只会不断向前。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>The future is independent of the past given the present<br>未来独立于过去，只基于当下。</p></blockquote>\n<p>这句人生哲理的话也代表了马尔科夫链的思想：<strong>过去所有的信息都已经被保存到了现在的状态，基于现在就可以预测未来。</strong>这里呢不再过多赘述，下面就让我们来介绍一下这个小游戏吧。</p>\n<h1 id=\"游戏规则\"><a href=\"#游戏规则\" class=\"headerlink\" title=\"游戏规则\"></a>游戏规则</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>用 7 张牌进行 3 次运算，其中每次运算需使用 2 张 <code>数字牌</code> 和 1 张 <code>运算符号牌</code> ；</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>每次运算后都将根据上一次的运算结果生成一张数字牌。最后一次运算结果<strong>刚好等于 1024 时记为</strong>「<strong>成功</strong>」。但是这里，每一步运算是无法撤销的！所以我们应该将我们的下一步考虑好再进行下一步。</p></blockquote>\n<p><img src=\"https://pic.leetcode-cn.com/1665457910-hhBBSU-33.png\" alt=\"https://pic.leetcode-cn.com/1665457910-hhBBSU-33.png\"></p>\n<p>我们每天做题、登陆都是可以获得一定的卡片的。</p>\n<h1 id=\"做题！\"><a href=\"#做题！\" class=\"headerlink\" title=\"做题！\"></a>做题！</h1><p>怎么利用自己的手来做出这个题目呢？我们可以先进行观察，首先我们是利用手中的所有卡片来进行 排序的。依我拙见，由于本人算法能力有些弱，所以呢自己写了个回溯全排，来解决这个问题。（这也就是不是个题目，要是个题目我这解法估计能超时超到家了）</p>\n<p>下面附上我的傻瓜代码：</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\"># 定义一个全排列函数\n# 应该一个数字加一个字母进行运算\n# 存在的问题：\n#   1.存在符号之间的转化 ------&gt; 选择使用eval()或直接读\n#   2.全排中加入符号  ------&gt; 先加数字在选两个符号\n\ndef dfs(p_, ans, length, s):\n    if len(ans) &#x3D;&#x3D; length:\n        if s &#x3D;&#x3D; &quot;int&quot;:\n            result_num.append(ans)\n        else:\n            result_operator.append(ans)\n        return\n    else:\n        for i in range(len(p_)):\n            dfs(p_[:i] + p_[i + 1:], ans + [p_[i]], length, s)\n\n\nresult_num &#x3D; list(set(result_num))\n\n\ndef main():\n    dfs(num, [], 4, &quot;int&quot;)\n    dfs(operoter, [], 3, &quot; &quot;)\n    res_ans &#x3D; []\n    if len(result_operator[0]) &lt; 3 or len(result_num[0]) &lt; 4:\n        print(&quot;抱歉，没有合适组合，请您继续努力&quot;)\n        return False\n    for i in range(len(result_num)):\n        result_num[i] &#x3D; list(map(str, result_num[i]))\n        for j in range(len(result_operator)):\n            res_str &#x3D; f&quot;((&#123;result_num[i][0]&#125;&#123;result_operator[j][0]&#125;&#123;result_num[i][1]&#125;)&#123;result_operator[j][1]&#125;&#123;result_num[i][2]&#125;) &#123;result_operator[j][2]&#125;&#123;result_num[i][3]&#125; &quot;\n            if eval(res_str) &#x3D;&#x3D; 1024:\n                res_ans.append(res_str)\n    print(res_ans)\n\n\nif __name__ &#x3D;&#x3D; &quot;__main__&quot;:\n    main()\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h1><p>这里引用游戏攻略里的一句话 “往事止于此，未来始于斯” 。祝福各位开可以以今日之我，成就明日生活。</p>\n","feature":true,"text":"开始的开始今年的LeetCode 1024活动是一个非常有意思的活动，名字是1024马尔可夫链，活动规则很好理解，就是一个马尔可夫链嘛。马尔可夫链（Markov Chain）可以说是机器学习和人工智能的基石，在强化学习、自然语言处理、金融领域、天气预测、语音识别方面都有着极其广泛...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":3,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":4,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%A7%8B%E7%9A%84%E5%BC%80%E5%A7%8B\"><span class=\"toc-text\">开始的开始</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%B8%B8%E6%88%8F%E8%A7%84%E5%88%99\"><span class=\"toc-text\">游戏规则</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%81%9A%E9%A2%98%EF%BC%81\"><span class=\"toc-text\">做题！</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%90%8E\"><span class=\"toc-text\">最后</span></a></li></ol>","author":{"name":"Gaoth","slug":"gaoth","avatar":"https://s2.loli.net/2022/10/24/zZ5Msr7bhigQVcj.jpg","link":"/","description":"不以为然的存在，细品起来会得到意想不到的有趣。<br /> @<b>公众号：噜啦啦小栈</b>","socials":{"github":"https://github.com//githubforgth","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/m0_51898303","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"手写数字识别","uid":"c3bb980dd99e420748682f824a1ae74e","slug":"手写数字识别","date":"2023-03-10T09:42:48.160Z","updated":"2023-03-10T09:42:48.160Z","comments":true,"path":"api/articles/手写数字识别.json","keywords":null,"cover":"https://smms.app/image/pBkLugRUEeihwjD","text":"餐前祷告怎么才能让你的电脑有那么一丢丢的小智能呢，现在好像有好多方法，但是那些高大上的方法，好像我们现在难以自己去实现，不过嘛万丈高楼平地起，我们可以用我们的聪明才智来实现一些小小的智能。 基础理论 那么我们就从手写数字识别开始吧！ 我们都知道人工智能三要素是什么呢？数据、算法、...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"算法","slug":"算法","count":3,"path":"api/categories/算法.json"}],"tags":[{"name":"人工智能","slug":"人工智能","count":1,"path":"api/tags/人工智能.json"}],"author":{"name":"Gaoth","slug":"gaoth","avatar":"https://s2.loli.net/2022/10/24/zZ5Msr7bhigQVcj.jpg","link":"/","description":"不以为然的存在，细品起来会得到意想不到的有趣。<br /> @<b>公众号：噜啦啦小栈</b>","socials":{"github":"https://github.com//githubforgth","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/m0_51898303","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"ArchLinux软件包管理器--pacman","uid":"7fddf81bf2759d3c5373d8e9a24289e5","slug":"Pacman软件包管理器介绍","date":"2022-10-28T09:33:46.536Z","updated":"2022-10-28T09:33:46.536Z","comments":true,"path":"api/articles/Pacman软件包管理器介绍.json","keywords":null,"cover":"https://s2.loli.net/2022/10/28/c3TNP8X4vD9mUGp.png","text":"本文多含自娱自乐内容，本意为方便作者查看，仅针对作者个人对于pacman的使用方法。且具体教程wiki以明确给出。 引言就在前几天一不小心就把自己的系统换成了ArchLinux，那我们都知道Ubuntu的软件包管理器是apt-get，那ArchLinux呢？没错就是Pacman。...","link":"","photos":[],"count_time":{"symbolsCount":936,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"author":{"name":"Gaoth","slug":"gaoth","avatar":"https://s2.loli.net/2022/10/24/zZ5Msr7bhigQVcj.jpg","link":"/","description":"不以为然的存在，细品起来会得到意想不到的有趣。<br /> @<b>公众号：噜啦啦小栈</b>","socials":{"github":"https://github.com//githubforgth","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/m0_51898303","juejin":"","customs":{}}},"feature":true}}